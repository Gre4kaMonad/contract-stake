// Example: Call stake() on StakingContract using RPC and private key

import { ethers } from "ethers";

// === Configuration ===

// RPC endpoint of your target network
const rpcUrl = "https://rpc.sepolia.org"; // Replace with your network RPC (e.g. Monad, BSC, etc.)

// Wallet private key (never expose in frontend!)
const privateKey = "0xYOUR_PRIVATE_KEY"; // Use securely (e.g. from env variable)

// Deployed contract address
const contractAddress = "0xYourContractAddress";

// ABI of the staking contract (only stake function here for brevity)
const stakingAbi = [
  {
    "inputs": [{ "internalType": "uint256", "name": "amt", "type": "uint256" }],
    "name": "stake",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  }
];

// === Execution ===

async function main() {
  // Connect to RPC
  const provider = new ethers.JsonRpcProvider(rpcUrl);

  // Load signer from private key
  const wallet = new ethers.Wallet(privateKey, provider);

  // Create contract instance
  const contract = new ethers.Contract(contractAddress, stakingAbi, wallet);

  // Amount to stake (e.g. 100 tokens, assuming 18 decimals)
  const amount = ethers.parseUnits("100", 18);

  // NOTE: Before staking, ensure `approve()` was called on the token contract

  // Call the stake() function
  const tx = await contract.stake(amount);
  console.log("Transaction sent:", tx.hash);

  // Wait for transaction confirmation
  await tx.wait();
  console.log("Stake successful");
}

main().catch(console.error);
